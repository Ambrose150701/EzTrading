@inject HttpClient _client

<EditForm Model="@item" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
        
        <div class="form-group">
            <label>Seller's Name': </label>
             <div>
                 <InputSelect @bind-Value="item.SellerId" class="form-control">
                     <option value="">--Select Seller--</option>
                      @if (Sellers != null)
                    {
                         foreach (var seller in Sellers)
                         {
                          <option value="@seller.Id">
                             @item.Seller.Name 
                          </option>
                        }
                     }
                </InputSelect>
                <ValidationMessage For="@(() => item.SellerId)" />
            </div>
        </div>
        
        <div class="form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="item.Name" class="form-control" />
                <ValidationMessage For="@(() => item.Name)" />
            </div>
        </div>

        <div class="form-group">
            <label>Price: </label>
            <div>
                <InputText @bind-Value="item.Price" class="form-control" />
                <ValidationMessage For="@(() => item.Price)" />
            </div>
        </div>

        @if (!Disabled)
        { 
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
        }

    <BackToList Target="items" />

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Item item { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    private IList<Seller> Sellers;

    protected async override Task OnInitializedAsync()
    {
        Sellers = await _client.GetFromJsonAsync<List<Seller>>($"{Endpoints.SellersEndpoint}");

    }
}
